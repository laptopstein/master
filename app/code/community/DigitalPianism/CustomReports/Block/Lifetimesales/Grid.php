<?php/** * Class DigitalPianism_CustomReports_Block_Lifetimesales_Grid */class DigitalPianism_CustomReports_Block_Lifetimesales_Grid extends Mage_Adminhtml_Block_Widget_Grid{    /**     *     */    public function __construct()    {        parent::__construct();        $this->setId('lifetimesalesReportGrid');        $this->setDefaultSort('orders_sum_amount');        $this->setDefaultDir('desc');    }    /**     * @return $this     * @throws Mage_Core_Exception     * @throws Zend_Date_Exception     */    protected function _prepareCollection()    {		// Get the session		$session = Mage::getSingleton('core/session');				// Dates for one week		$store = Mage_Core_Model_App::ADMIN_STORE_ID;		$timezone = Mage::app()->getStore($store)->getConfig(Mage_Core_Model_Locale::XML_PATH_DEFAULT_TIMEZONE);		date_default_timezone_set($timezone);				// Automatic -30 days if no dates provided		if ($session->getLifetimesalesFrom())		{			$sDate = $session->getLifetimesalesFrom();		}        else		{			$sDate = date('Y-m-d 00:00:00',				Mage::getModel('core/date')->timestamp(strtotime('-30 days'))			);		}		if ($session->getLifetimesalesTo())		{			$eDate = $session->getLifetimesalesTo();		}        else		{			$eDate = date('Y-m-d 23:59:59', 				Mage::getModel('core/date')->timestamp(time())			);		}				###############################################################################		$start = new Zend_Date($sDate);		$start->setTimeZone("UTC");        $end = new Zend_Date($eDate);		$end->setTimeZone("UTC");		###############################################################################		$from = $start->toString("Y-MM-dd HH:mm:ss");		$to = $end->toString("Y-MM-dd HH:mm:ss");		        $collection = Mage::getResourceModel('reports/customer_collection')			->addCustomerName()			->joinOrders($from, $to)			->addOrdersCount()			->addSumAvgTotals()			->orderByTotalAmount()			->joinAttribute('billing_region', 'customer_address/region', 'default_billing', null, 'left')            ->joinAttribute('billing_country_id', 'customer_address/country_id', 'default_billing', null, 'left');;        $this->setCollection($collection);        parent::_prepareCollection();        return $this;    }    /**     * @return $this     * @throws Exception     */    protected function _prepareColumns()    {         $this->addColumn('entity_id', array(            'header'    => Mage::helper('reports')->__('Customer ID'),			'width'     => '50',            'index'     => 'entity_id'        ));				$this->addColumn('name', array(            'header'    => Mage::helper('reports')->__('Name'),            'index'     => 'name'        ));		        $this->addColumn('email', array(            'header'    => Mage::helper('reports')->__('Email'),            'width'     => '150',            'index'     => 'email'        ));        $this->addColumn('billing_country_id', array(            'header'    => Mage::helper('reports')->__('Country'),            'width'     => '100',            'type'      => 'country',            'index'     => 'billing_country_id',        ));        $this->addColumn('billing_region', array(            'header'    => Mage::helper('reports')->__('State/Province'),            'width'     => '150',            'index'     => 'billing_region',        ));				$this->addColumn('orders_count', array(            'header'    => Mage::helper('reports')->__('Number of Orders'),            'width'     => '100px',            'sortable'  => false,            'index'     => 'orders_count',            'total'     => 'sum',            'type'      => 'number'        ));				$this->addColumn('orders_avg_amount', array(            'header'    => Mage::helper('reports')->__('Average Order Amount'),            'width'     => '200px',            'align'     => 'right',            'sortable'  => false,            'type'      => 'number',            'index'     => 'orders_avg_amount',            'total'     => 'orders_sum_amount/orders_count'        ));				$this->addColumn('orders_sum_amount', array(            'header'    => Mage::helper('reports')->__('Orders Sum Amount'),            'width'     => '100',			'type'		=> 'number',            'index'     => 'orders_sum_amount',        ));				$this->addColumn('action',            array(                'header'    =>  Mage::helper('reports')->__('Action'),                'width'     => '100',                'type'      => 'action',                'getter'    => 'getEntityId',                'actions'   => array(                    array(                        'caption'   => Mage::helper('reports')->__('Edit Customer'),                        'url'       => array('base'=> 'adminhtml/customer/edit'),                        'field'     => 'id'                    )                ),                'filter'    => false,                'sortable'  => false,                'index'     => 'stores',                'is_system' => true,        ));        $this->addExportType('*/*/exportLifetimesalesCsv', Mage::helper('reports')->__('CSV'));        $this->addExportType('*/*/exportLifetimesalesExcel', Mage::helper('reports')->__('Excel'));        return parent::_prepareColumns();    }}